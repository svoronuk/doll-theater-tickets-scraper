import { Show } from './types';
import { sendNotification, createNotificationMessage } from './services/telegram';
import { config } from './config/config';

export const showImages: Record<string, string> = {
	'–£—Å–ª—É–≥–∏ –º–∞—Å—Ç–µ—Ä - –∫–ª–∞—Å—Å': 'https://puppet-minsk.by/images/Afisha/master-klass.jpg',
	–ú–†–ûI–í–ê: 'https://puppet-minsk.by/images/Afisha/mroiva.jpg',
	–ë–∞–±–æ—á–∫–∏: 'https://puppet-minsk.by/images/Afisha/babochki.jpg',
	'–í —Å—Ç—Ä–∞–Ω–µ –Ω–µ–≤—ã—É—á–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤': 'https://puppet-minsk.by/images/Afisha/uroki_afisha.jpg',
	'–ù–æ—á –ø–µ—Ä–∞–¥ –∫–∞–ª—è–¥–∞–ºi': 'https://puppet-minsk.by/images/Afisha/noch-perad-kalyadami.jpg',
	'–ö—Ä–∞—Å–Ω–∞—è –®–∞–ø–æ—á–∫–∞': 'https://puppet-minsk.by/images/Afisha/krasnaya-shapochka.jpg',
	'–£–º–Ω–∞—è —Å–æ–±–∞—á–∫–∞ –°–æ–Ω—è': 'https://puppet-minsk.by/images/Afisha/umnaya-sobachka-sonya.jpg',
	'–ó–∞–ø–∏—Å–∫–∏ —é–Ω–æ–≥–æ –≤—Ä–∞—á–∞': 'https://puppet-minsk.by/images/Afisha/young_doctor_afisha.jpg',
	'–ö–æ—Ç –≤ —Å–∞–ø–æ–≥–∞—Ö': 'https://puppet-minsk.by/images/Afisha/kot_v_sapogah.jpg',
	'–ó–∞ —Å–Ω–µ–∂–Ω–æ–π –∫–æ—Ä–æ–ª–µ–≤–æ–π': 'https://puppet-minsk.by/images/Afisha/za-snezhnoj-korolevoj.jpg',
	'–í–æ–ª–∫ –∏ —Å–µ–º–µ—Ä–æ –∫–æ–∑–ª—è—Ç': 'https://puppet-minsk.by/images/Afisha/volk_i_semero_kozlyat.jpg',
	'–ü–∞–Ω—Å–∏–æ–Ω ¬´Belvedere¬ª': 'https://puppet-minsk.by/images/Afisha/belvedere_afisha_3.jpg',
	'–ù–∞ —á—ë—Ä–Ω–æ–π-—á—ë—Ä–Ω–æ–π —É–ª–∏—Ü–µ':
		'https://puppet-minsk.by/images/Afisha/na-chjornoj-chjornoj-ulitse.jpg',
	'–ü—Ä–æ–¥–∞–Ω–Ω—ã–π —Å–º–µ—Ö': 'https://puppet-minsk.by/images/Afisha/prodannyj-smekh.jpg',
	–ö–∏–≤–∏: 'https://puppet-minsk.by/images/Afisha/kivi.jpg',
	–•—É—Ç–æ—Ä: 'https://puppet-minsk.by/images/Afisha/khutor.jpg',
};

function splitDateTime(dateStr: string): { date: string; time?: string } {
	const match = dateStr.match(/(.+?)\s+(\d{1,2}:\d{2})/);
	if (match) return { date: match[1], time: match[2] };
	return { date: dateStr };
}

export function formatShowMessage(show: Show): string {
	const { date, time } = splitDateTime(show.date);
	let msg = `<b>${show.name}</b>\n${date}${time ? `\n${time}` : ''}`;
	msg += `\n<i>–ï–≤–≥–µ–Ω–∏–π –ö–æ—Ä–Ω—è–≥</i>`;
	msg += `\n<a href=\"${show.link}\">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–µ–∫—Ç–∞–∫–ª—é</a>`;
	return msg;
}

export function formatShowListMessage(shows: Show[]): string {
	if (!shows.length) return '–ù–µ—Ç —Å–ø–µ–∫—Ç–∞–∫–ª–µ–π –¥–ª—è —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞.';
	return shows.map((show, idx) => `${idx + 1}. <b>${show.name}</b> ‚Äî ${show.date}`).join('\n');
}

export async function notifyForMonth(month: { id: string; name: string }, shows: Show[]) {
	await sendNotification({
		text: `üéâ –ù–æ–≤—ã—è —Å–ø–µ–∫—Ç–∞–∫–ª—ñ –∑'—è–≤—ñ–ª—ñ—Å—è: ${month.name}`,
		chatId: config.telegramChatId,
		parseMode: 'HTML',
	});
	for (const show of shows) {
		const message = formatShowMessage(show);
		const imageUrl = showImages[show.name];
		if (imageUrl) {
			await sendNotification({
				text: message,
				chatId: config.telegramChatId,
				parseMode: 'HTML',
				imageUrl,
			});
		} else {
			const msgObj = createNotificationMessage(message, config.telegramChatId, 'HTML');
			await sendNotification(msgObj);
		}
	}
}
